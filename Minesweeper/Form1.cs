using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;


namespace Minesweeper
{
    /// <summary>
    /// This class manages the window that accepts the game specifications from the user
    /// </summary>
    public partial class Form1 : Form
    {
        /// <summary>
        /// The window that contains the main game area. This class opens the game if it is provided with valid input. 
        /// </summary>
        public GameMap game;

        /// <summary>
        /// Initializes the data contained by the class.
        /// </summary>
        public Form1()
        {
            InitializeComponent();

            //GameMap myNewGame; // used for testing
            //Uncomment one (or more) of the following to test each constructer of the object
            // myNewGame = new GameMap(40,80,15, 30);
            // myNewGame = new GameMap(120, 240, 5, 6000);//Test this to test our speed of loading

        }

        /*Were these made on accident?
        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void label2_Click(object sender, EventArgs e)
        {

        }*/

        /// <summary>
        /// Varifies that the input given to the main window is valid and if it is opens the game window. 
        /// </summary>
        /// <param name="sender">
        /// Contains information about the object that send the event.
        /// Unused by the current implementation of the function but because the 
        /// function was generated by visual studio it was left in place. 
        /// </param>
        /// <param name="e">
        /// Contains information about the object that send the event.
        /// Unused by the current implementation of the function but because the 
        /// function was generated by visual studio it was left in place.
        /// </param>
        private void continueButton_Click_1(object sender, EventArgs e)
        {
            var numRows = 0;
            var numCols = 0;
            var numMines = 0;
            var rowsParsed = Int32.TryParse(this.rowTextBox.Text, out numRows);
            var colsParsed = Int32.TryParse(this.columnTextBox.Text, out numCols);
            var minesParsed = Int32.TryParse(this.mineTextBox.Text, out numMines);
            var numericInput = rowsParsed && colsParsed && minesParsed;
            var validNumberOfMines = numMines >= 0 && numMines < (numRows * numCols);// changed from > to >= for the purposes of showing how Brandon's Algorithm works
            bool useBrandonsAlgorithm;
            if (UseBrandonsAlgorithmCheckBox.Checked)
            {
                useBrandonsAlgorithm = true;
            }
            else
            {
                useBrandonsAlgorithm = false;
            }
            if (numericInput)
            {
                if (numRows > 1 && numRows <= 100) // changed from 50 to 100 for the purposes of showing how Brandon's Algorithm works
                {
                    if (numCols > 1 && numCols <= 100)// changed from 50 to 100 for the purposes of showing how Brandon's Algorithm works
                    {
                        if (validNumberOfMines)
                        {
                            game = new GameMap(numRows, numCols, 50, numMines, useBrandonsAlgorithm);
                            this.Hide();
                        }
                        else
                        {
                            MessageBox.Show(this, "Invalid Number of mines");
                        }
                    }
                    else
                    {
                        MessageBox.Show(this, "Invalid number or columns. Please enter a number between 2 and 50.");
                    }
                }
                else
                {
                    MessageBox.Show(this, "Invalid number or rows. Please enter a number between 2 and 50.");
                }
            }
            else
            {
                MessageBox.Show(this, "Non-Numeric Input");
            }
        }


    }
}
